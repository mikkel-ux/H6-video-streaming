openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /api/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                userName:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - firstName
                - lastName
                - userName
                - email
                - password
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      userName:
                        type: string
                      password:
                        type: string
        "400":
          description: Invalid request
  /api/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: User login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  password:
                    type: string
  /api/logout:
    post:
      summary: User logout
      description: Revokes the refresh token and clears authentication cookies.
      responses:
        "200":
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"
        "500":
          description: Failed to revoke refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to revoke refresh token"
  /api/users/{userId}:
    get:
      summary: Get a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  email:
                    type: string
                  userName:
                    type: string
                  age:
                    type: integer
        "404":
          description: User not found
    put:
      summary: Update a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                userName:
                  type: string
                age:
                  type: integer
                email:
                  type: string
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid request
        "404":
          description: User not found
    patch:
      summary: Update user password
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
      responses:
        "200":
          description: Password updated successfully
        "400":
          description: Invalid request
        "401":
          description: Old password is incorrect
        "404":
          description: User not found
        "500":
          description: Failed to hash new password
    delete:
      summary: Delete a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
